/*
  @license
  crowdutil

  The MIT License (MIT)

  Copyright (c) 2014 Yasuhiro Okuno

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
 */
(function(){var a,b;a=function(a){a.parameters(["-c","--config"],"config file to use [optional]"),a.parameters(["-D","--directory"],"target directory [optional]"),a.options(["-v","--verbose"],"verbose mode")},b=function(b){var c,d;c=require("operetta").Operetta,d=new c,d.command("test-connect","test connection to selected Directory",function(c){c.banner="crowdutil: test-connect\ntest connection to selected directory.\n\n",a(c),c.start(function(a){b(a)?require("./test-connection").run(a):logger.error("initialization failed")})}),d.command("create-user","create user in selected Directory",function(c){c.banner="crowdutil: create-user\ncreate user in selected directory\n\n",a(c),c.parameters(["-f","--first"],"user's first name"),c.parameters(["-l","--last"],"user's last name"),c.parameters(["-d","--dispname"],"user's display name [optional]"),c.parameters(["-e","--email"],"user's email address"),c.parameters(["-u","--uid"],"user's login ID"),c.parameters(["-p","--pass"],"user's password [optional]"),c.start(function(a){b(a)?require("./create-user").run(a):logger.error("initialization failed")})}),d.command("search-user","search user in selected Directory",function(c){c.banner="crowdutil: search-user\nsearch user in selected directory\n\n",a(c),c.parameters(["-f","--first"],"user's first name"),c.parameters(["-l","--last"],"user's last name"),c.parameters(["-e","--email"],"user's email address"),c.parameters(["-u","--uid"],"user's login ID"),c.start(function(a){b(a)?require("./search-user").run(a):logger.error("initialization failed")})}),d.command("update-user","update user in selected Directory",function(c){c.banner="crowdutil: update-user\nupdate user in selected directory\n\n",a(c),c.parameters(["-f","--first"],"user's first name [optional]"),c.parameters(["-l","--last"],"user's last name [optional]"),c.parameters(["-d","--dispname"],"user's display name [optional]"),c.parameters(["-e","--email"],"user's email address [optional]"),c.parameters(["-u","--uid"],"target user ID to update"),c.parameters(["-a","--active"],"user's account active status (true|false)[optional]"),c.start(function(a){b(a)?require("./update-user").run(a):logger.error("initialization failed")})}),d.command("create-group","create group in selected Directory",function(c){c.banner="crowdutil: create-group\ncreate group in selected directory.\n\n",a(c),c.parameters(["-n","--name"],"group name"),c.parameters(["-d","--desc"],"description of the group"),c.start(function(a){b(a)?require("./create-group").run(a):logger.error("initialization failed")})}),d.command("add-to-groups","add users to groups",function(c){c.banner="crowdutil: add-to-groups\nadd list of users to list of groups.\n\n",a(c),c.parameters(["-g","--group"],"comma separated list of groups to add users to"),c.parameters(["-u","--uid"],"comma separated list of users to add to groups"),c.start(function(a){b(a)?require("./add-to-groups").run(a):logger.error("initialization failed")})}),d.command("list-group","list group membership of a user",function(c){c.banner="crowdutil: list-group\nlist group membership of a user.\n\n",a(c),c.parameters(["-u","--uid"],"uid to find group membership of."),c.start(function(a){b(a)?require("./list-group").run(a):logger.error("initialization failed")})}),d.command("list-member","list members of the group",function(c){c.banner="crowdutil: list-member\nlist members of the specified group.\n\n",a(c),c.parameters(["-g","--group"],"group to find members of."),c.start(function(a){b(a)?require("./list-member").run(a):logger.error("initialization failed")})}),d.command("is-member","check membership of users in groups",function(c){c.banner="crowdutil: is-member\ncheck membership of users in groups.\n\n",a(c),c.parameters(["-g","--group"],"comma separated list of groups"),c.parameters(["-u","--uid"],"comma separated list of users"),c.start(function(a){b(a)?require("./is-member").run(a):logger.error("initialization failed")})}),d.command("rm-from-groups","remove users from groups",function(c){c.banner="crowdutil: rm-from-groups\nremove list of users from list of groups.\n\n",a(c),c.parameters(["-g","--group"],"comma separated list of groups to remove users from"),c.parameters(["-u","--uid"],"comma separated list of users to remove from groups"),c.start(function(a){b(a)?require("./rm-from-groups").run(a):logger.error("initialization failed")})}),d.command("empty-groups","empty the specified group",function(c){c.banner="crowdutil: empty-groups\nremove all direct members from the list of groups.\nIf no -f option is supplied, you must answer 'yes' to proceed.\n\n",a(c),c.parameters(["-g","--group"],"comma separated list of groups to empty out"),c.options(["-f","--force"],"force emptying the group"),c.start(function(a){b(a)?require("./empty-groups").run(a):logger.error("initialization failed")})}),d.command("batch-exec","execute according to batch file",function(c){c.banner="crowdutil: batch-exec\nexecute according to given batch file.\n\n",a(c),c.parameters(["-b","--batch"],"path to the batch file to execute"),c.options(["-f","--force"],"ignore errors and continue processing the batch"),c.start(function(a){b(a)?require("./batch-exec").run(a):logger.error("initialization failed")})}),d.command("create-config","create a sample config file",function(a){a.banner="crowdutil: create-config\ncreate a sample config file.\n\n",a.parameters(["-o","--out"],"output filename (default to crowdutil.json). stdout to print"),a.options(["-f","--force"],"force overwriting file."),a.start(function(a){require("./create-config").run(a)})}),d.banner="crowdutil. Atlassian Crowd utility command line tool\n\n",d.options(["-V","--version"],"display version info"),d.on("-V",function(){var a;a=require("../../../package.json"),console.log(a.name+" version "+a.version)}),d.start()},exports.start=b}).call(this);